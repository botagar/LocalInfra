# Ansible facts available: https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_vars_facts.html
- name: run the playbook tasks on the localhost
  hosts: 127.0.0.1
  connection: local
  become: yes
  vars:
    container_engine: "{{ container_engine | default('docker') }}"

  tasks:
  - name: Debug Diagnostics
    debug:
      msg:
        - Running as {{ ansible_facts.user_id }}.
        - Started by user {{ ansible_env.SUDO_USER }}({{ ansible_env.SUDO_UID }}).
        - Target user home dir is {{ lookup('env', 'HOME') }}
        - System release is {{ ansible_distribution_release }}.

  - name: Clean unwanted pre-installed packages
    apt:
      name:
      - firefox-esr
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
      state: absent

  - name: Enable universe repository
    apt_repository:
      repo: "{{ item }}"
    loop:
      - "deb http://archive.ubuntu.com/ubuntu/ jammy universe"
      - "deb http://archive.ubuntu.com/ubuntu/ jammy-updates universe"
      - "deb http://security.ubuntu.com/ubuntu/ jammy-security universe"

  - name: Install base utilities
    apt:
      name:
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg2
      - wget
      - curl
      - snapd
      state: latest

  - name: Install basic dev utilities
    apt:
      name:
      - git
      - vim
      - tree
      - htop
      - vim
      state: latest

  - name: Setup dev libraries
    include: tasks/local_dev_libs.yml
    vars:
      state_local_dev_libs: latest

  - name: Install Brew
    include: tasks/brew.yml
    vars:
      state_brew: present

  # NOT idempotent
  - name: Install PyEnv
    import_role:
      name: staticdev.pyenv
    vars:
      pyenv_env: 'system'
      pyenv_global:
      - "3.11"
      pyenv_python_versions:
      - "3.11"
      - "3.7"
      pyenv_enable_autocompletion: true
  
  # NOT idempotent
  - name: Install AWS CLI
    include: tasks/aws_cli.yml
    vars:
      state_aws_cli: present

  - name: Install aws-vault credentials CLI utility
    become_user: "{{ ansible_env.SUDO_USER }}"
    community.general.homebrew:
      name: aws-vault
      state: present

  - name: Install PipeWire (System Sound)
    include: tasks/pipewire.yml

  - name: Install VSCode
    include: tasks/vscode.yml

  - name: Announce Selected Container Engine to Install
    debug:
      msg: "Installing selected container engine [{{ container_engine }}] from available options [docker, podman]"

  - name: Install Docker
    include: tasks/docker.yml
    when: container_engine == "docker"

  - name: Install Podman
    include: tasks/podman.yml
    when: container_engine == "podman"

  - name: Install NVM
    include: tasks/nvm.yml

  - name: Install Apt packages
    apt:
      name:
      - nala # Faster Apt Package Manager
      - net-tools
      - rdesktop
      - telegram-desktop
      - syncthing
      - deluge
      - deluge-web
      - timeshift # Disk Backup and Restore

  - name: Install firefox
    snap:
      name:
      - firefox

  - name: Install Wine
    include: tasks/wine.yml

  - name: Install Signal
    include: tasks/signal.yml

  - name: Install Snap packages
    snap:
      name:
      - cura-slicer
      - discord
      - moonlight
      - slack
      - bpytop
      - chromium

  - name: Install Universe packages
    apt:
      name:
      - steam
 
  - name: Install Streamdeck UI
    include: tasks/streamdeck.yml
  
  - name: Install UniFi Controller
    include: tasks/unifi.yml

  - name: Download and Install Portmaster .deb
    apt:
      deb: https://updates.safing.io/latest/linux_amd64/packages/portmaster-installer.deb
  
  - name: Install Private Internet Access VPN
    include: tasks/private_internet_access.yml

  - name: Download and Install Obsidian .deb
    apt:
      deb: https://github.com/obsidianmd/obsidian-releases/releases/download/v1.3.7/obsidian_1.3.7_amd64.deb
  
  - name: Install OpenRazer
    include: tasks/openrazer.yml

  - name: Install OBS
    include: tasks/obs.yml

  - name: Install AppImage Launcher
    include: tasks/appimage_launcher.yml

  - name: Apt cleanup
    apt:
      autoremove: yes
      autoclean: yes
